// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

//
// Changed default uart0 port of nRF5340-DK
//
&pinctrl {
	uart0_default: uart0_default {
		group1 {
				psels = <NRF_PSEL(UART_TX, 1, 10)>;
						// <NRF_PSEL(UART_RTS, 1, xx)>;
		};
		group2 {
				psels = <NRF_PSEL(UART_RX, 1, 11)>;
						// <NRF_PSEL(UART_CTS, 1, xx)>;
				bias-pull-up;
		};
	};
	uart0_sleep: uart0_sleep {
		group1 {
				psels = <NRF_PSEL(UART_TX, 1, 10)>,
						<NRF_PSEL(UART_RX, 1, 11)>;
						// <NRF_PSEL(UART_RTS, 1, xx)>,
						// <NRF_PSEL(UART_CTS, 1, xx)>;
				low-power-enable;
		};
	};
};

//
// Added for UART additional devices
//
&pinctrl {
	uart2_default: uart2_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 24)>;
		};
		group2 {
			psels = <NRF_PSEL(UART_RX, 0, 25)>;
			bias-pull-up;
		};
	};
	uart2_sleep: uart2_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 24)>,
				<NRF_PSEL(UART_RX, 0, 25)>;
			low-power-enable;
		};
	};

	uart3_default: uart3_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 28)>;
		};
		group2 {
			psels = <NRF_PSEL(UART_RX, 0, 29)>;
			bias-pull-up;
		};
	};
	uart3_sleep: uart3_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 28)>,
				<NRF_PSEL(UART_RX, 0, 29)>;
			low-power-enable;
		};
	};
};

&uart2 {
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart2_default>;
	pinctrl-1 = <&uart2_sleep>;
	pinctrl-names = "default", "sleep";
	my_device: my_uart_peripheral0 {
		compatible = "mycompany,my_uart_peripheral";
		status="okay";
		label = "my_uart_peripheral0";
		button-gpios = <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; // Button 1 on dk
		initial-string = "Hello, World!";
	};
};
&uart3 {
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart3_default>;
	pinctrl-1 = <&uart3_sleep>;
	pinctrl-names = "default", "sleep";
	my_device_b: my_uart_peripheral_b0 {
		compatible = "mycompany,my_uart_peripheral_b";
		status="okay";
		label = "my_uart_peripheral_b0";
		button-gpios = <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; // Button 1 on dk
		initial-string = "Hello, World!";
	};
};

//
// USB Device
//
&zephyr_udc0 {
	cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
	};

	cdc_acm_uart1 {
		compatible = "zephyr,cdc-acm-uart";
	};
};

//
// Changed default i2c1 port of nRF5340-DK
//
&pinctrl {
	i2c1_default: i2c1_default {
		group1 {
				psels = <NRF_PSEL(TWIM_SDA, 1, 3)>,
						<NRF_PSEL(TWIM_SCL, 1, 2)>;
		};
	};

	i2c1_sleep: i2c1_sleep {
		group1 {
				psels = <NRF_PSEL(TWIM_SDA, 1, 3)>,
						<NRF_PSEL(TWIM_SCL, 1, 2)>;
				low-power-enable;
		};
	};
};

//
// Added for i2c sensor
//
&i2c1 {
    status = "okay";
	my_mcp9808: mcp9808@18 {
		compatible = "microchip,mcp9808";
        status = "okay";
		reg = <0x18>;
		resolution = <3>;
	};
};
